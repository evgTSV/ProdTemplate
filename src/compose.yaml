services:
  webapp:
    build:
      context: .
      dockerfile: ProdTemplate.Api/Dockerfile
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "80:8080"
      - "8080:8080"

  postgres:
    image: postgres:latest
    env_file:
      - .env
    ports:
      - "8050:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U myuser -d mydatabase" ]
      interval: 1s
      timeout: 10s
      retries: 5
      
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "8052:3000"
    env_file:
      - .env
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
      
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "8074:3100"
    env_file:
      - .env
    volumes:
      - ./loki.yml:/etc/loki/loki.yml
      - loki_data:/etc/loki
      
volumes:
  postgres_data:
  loki_data:
  grafana_data: